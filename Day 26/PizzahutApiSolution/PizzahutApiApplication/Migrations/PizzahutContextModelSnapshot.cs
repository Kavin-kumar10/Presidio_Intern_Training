// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzahutApiApplication.Context;

#nullable disable

namespace PizzahutApiApplication.Migrations
{
    [DbContext(typeof(PizzahutContext))]
    partial class PizzahutContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PizzahutApiApplication.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("PizzahutApiApplication.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PizzaId"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PizzaId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Pizzas", (string)null);

                    b.HasData(
                        new
                        {
                            PizzaId = 101,
                            Description = "Spicy,Hot and Salty",
                            Name = "American",
                            count = 10,
                            type = "Non veg"
                        },
                        new
                        {
                            PizzaId = 102,
                            Description = "Asian Style Chicken",
                            Name = "Asian Manjurian",
                            count = 9,
                            type = "Non veg"
                        },
                        new
                        {
                            PizzaId = 103,
                            Description = "Chilly Spicy Pizza",
                            Name = "Veg Pizza",
                            count = 12,
                            type = "Veg"
                        });
                });

            modelBuilder.Entity("PizzahutApiApplication.Models.User", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordHashKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PizzahutApiApplication.Models.Pizza", b =>
                {
                    b.HasOne("PizzahutApiApplication.Models.Customer", null)
                        .WithMany("OrderList")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("PizzahutApiApplication.Models.User", b =>
                {
                    b.HasOne("PizzahutApiApplication.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PizzahutApiApplication.Models.Customer", b =>
                {
                    b.Navigation("OrderList");
                });
#pragma warning restore 612, 618
        }
    }
}
